name: release

on:
  schedule:
    - cron: '0 12 * * *'

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: |-
          psql -X -v ON_ERROR_STOP=1 -f dist/delegated-registry-extended-latest.sql
          psql -X -v ON_ERROR_STOP=1 -c "SELECT cc, start::inet, value FROM record WHERE type IN ('ipv4', 'ipv6')"
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: postgres

      - name: Create Tag Name
        id: create_tag_name
        run: |-
          node -e "console.log('::set-output name=ref::refs/tags/v' + require('./package.json').version + '+' + require('date-fns').formatISO(new Date(), { format: 'basic', representation: 'date' }))"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag_name.outputs.ref }}
          release_name: Release ${{ steps.create_tag_name.outputs.ref }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/delegated-registry-extended-latest.sql
          asset_name: delegated-registry-extended-latest.sql
          asset_content_type: application/sql
